'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Restaurant")>  _
Partial Public Class ContextoDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMesa(instance As Mesa)
    End Sub
  Partial Private Sub UpdateMesa(instance As Mesa)
    End Sub
  Partial Private Sub DeleteMesa(instance As Mesa)
    End Sub
  Partial Private Sub InsertMenu(instance As Menu)
    End Sub
  Partial Private Sub UpdateMenu(instance As Menu)
    End Sub
  Partial Private Sub DeleteMenu(instance As Menu)
    End Sub
  Partial Private Sub InsertCaja(instance As Caja)
    End Sub
  Partial Private Sub UpdateCaja(instance As Caja)
    End Sub
  Partial Private Sub DeleteCaja(instance As Caja)
    End Sub
  Partial Private Sub InsertEmpleado(instance As Empleado)
    End Sub
  Partial Private Sub UpdateEmpleado(instance As Empleado)
    End Sub
  Partial Private Sub DeleteEmpleado(instance As Empleado)
    End Sub
  Partial Private Sub InsertDeposito(instance As Deposito)
    End Sub
  Partial Private Sub UpdateDeposito(instance As Deposito)
    End Sub
  Partial Private Sub DeleteDeposito(instance As Deposito)
    End Sub
  Partial Private Sub InsertLogin(instance As Login)
    End Sub
  Partial Private Sub UpdateLogin(instance As Login)
    End Sub
  Partial Private Sub DeleteLogin(instance As Login)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.DATOS.My.MySettings.Default.RestaurantConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Mesas() As System.Data.Linq.Table(Of Mesa)
		Get
			Return Me.GetTable(Of Mesa)
		End Get
	End Property
	
	Public ReadOnly Property Menus() As System.Data.Linq.Table(Of Menu)
		Get
			Return Me.GetTable(Of Menu)
		End Get
	End Property
	
	Public ReadOnly Property Cajas() As System.Data.Linq.Table(Of Caja)
		Get
			Return Me.GetTable(Of Caja)
		End Get
	End Property
	
	Public ReadOnly Property Empleados() As System.Data.Linq.Table(Of Empleado)
		Get
			Return Me.GetTable(Of Empleado)
		End Get
	End Property
	
	Public ReadOnly Property Depositos() As System.Data.Linq.Table(Of Deposito)
		Get
			Return Me.GetTable(Of Deposito)
		End Get
	End Property
	
	Public ReadOnly Property Logins() As System.Data.Linq.Table(Of Login)
		Get
			Return Me.GetTable(Of Login)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Mesas")>  _
Partial Public Class Mesa
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID_MESA As Integer
	
	Private _ESTADO As String
	
	Private _CAPACIDAD As Integer
	
	Private _ORDENES As String
	
	Private _ID_MESONERO As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnID_MESAChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_MESAChanged()
    End Sub
    Partial Private Sub OnESTADOChanging(value As String)
    End Sub
    Partial Private Sub OnESTADOChanged()
    End Sub
    Partial Private Sub OnCAPACIDADChanging(value As Integer)
    End Sub
    Partial Private Sub OnCAPACIDADChanged()
    End Sub
    Partial Private Sub OnORDENESChanging(value As String)
    End Sub
    Partial Private Sub OnORDENESChanged()
    End Sub
    Partial Private Sub OnID_MESONEROChanging(value As String)
    End Sub
    Partial Private Sub OnID_MESONEROChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_MESA", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID_MESA() As Integer
		Get
			Return Me._ID_MESA
		End Get
		Set
			If ((Me._ID_MESA = value)  _
						= false) Then
				Me.OnID_MESAChanging(value)
				Me.SendPropertyChanging
				Me._ID_MESA = value
				Me.SendPropertyChanged("ID_MESA")
				Me.OnID_MESAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ESTADO", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property ESTADO() As String
		Get
			Return Me._ESTADO
		End Get
		Set
			If (String.Equals(Me._ESTADO, value) = false) Then
				Me.OnESTADOChanging(value)
				Me.SendPropertyChanging
				Me._ESTADO = value
				Me.SendPropertyChanged("ESTADO")
				Me.OnESTADOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAPACIDAD", DbType:="Int NOT NULL")>  _
	Public Property CAPACIDAD() As Integer
		Get
			Return Me._CAPACIDAD
		End Get
		Set
			If ((Me._CAPACIDAD = value)  _
						= false) Then
				Me.OnCAPACIDADChanging(value)
				Me.SendPropertyChanging
				Me._CAPACIDAD = value
				Me.SendPropertyChanged("CAPACIDAD")
				Me.OnCAPACIDADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDENES", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property ORDENES() As String
		Get
			Return Me._ORDENES
		End Get
		Set
			If (String.Equals(Me._ORDENES, value) = false) Then
				Me.OnORDENESChanging(value)
				Me.SendPropertyChanging
				Me._ORDENES = value
				Me.SendPropertyChanged("ORDENES")
				Me.OnORDENESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_MESONERO", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property ID_MESONERO() As String
		Get
			Return Me._ID_MESONERO
		End Get
		Set
			If (String.Equals(Me._ID_MESONERO, value) = false) Then
				Me.OnID_MESONEROChanging(value)
				Me.SendPropertyChanging
				Me._ID_MESONERO = value
				Me.SendPropertyChanged("ID_MESONERO")
				Me.OnID_MESONEROChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Menu")>  _
Partial Public Class Menu
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID_PLATO As Integer
	
	Private _ID_TIPO As String
	
	Private _NOMBRE As String
	
	Private _DESCRIPCION As String
	
	Private _PRECIO As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnID_PLATOChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_PLATOChanged()
    End Sub
    Partial Private Sub OnID_TIPOChanging(value As String)
    End Sub
    Partial Private Sub OnID_TIPOChanged()
    End Sub
    Partial Private Sub OnNOMBREChanging(value As String)
    End Sub
    Partial Private Sub OnNOMBREChanged()
    End Sub
    Partial Private Sub OnDESCRIPCIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPCIONChanged()
    End Sub
    Partial Private Sub OnPRECIOChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPRECIOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PLATO", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID_PLATO() As Integer
		Get
			Return Me._ID_PLATO
		End Get
		Set
			If ((Me._ID_PLATO = value)  _
						= false) Then
				Me.OnID_PLATOChanging(value)
				Me.SendPropertyChanging
				Me._ID_PLATO = value
				Me.SendPropertyChanged("ID_PLATO")
				Me.OnID_PLATOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_TIPO", DbType:="VarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property ID_TIPO() As String
		Get
			Return Me._ID_TIPO
		End Get
		Set
			If (String.Equals(Me._ID_TIPO, value) = false) Then
				Me.OnID_TIPOChanging(value)
				Me.SendPropertyChanging
				Me._ID_TIPO = value
				Me.SendPropertyChanged("ID_TIPO")
				Me.OnID_TIPOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOMBRE", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property NOMBRE() As String
		Get
			Return Me._NOMBRE
		End Get
		Set
			If (String.Equals(Me._NOMBRE, value) = false) Then
				Me.OnNOMBREChanging(value)
				Me.SendPropertyChanging
				Me._NOMBRE = value
				Me.SendPropertyChanged("NOMBRE")
				Me.OnNOMBREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPCION", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property DESCRIPCION() As String
		Get
			Return Me._DESCRIPCION
		End Get
		Set
			If (String.Equals(Me._DESCRIPCION, value) = false) Then
				Me.OnDESCRIPCIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPCION = value
				Me.SendPropertyChanged("DESCRIPCION")
				Me.OnDESCRIPCIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRECIO", DbType:="Money NOT NULL")>  _
	Public Property PRECIO() As Decimal
		Get
			Return Me._PRECIO
		End Get
		Set
			If ((Me._PRECIO = value)  _
						= false) Then
				Me.OnPRECIOChanging(value)
				Me.SendPropertyChanging
				Me._PRECIO = value
				Me.SendPropertyChanged("PRECIO")
				Me.OnPRECIOChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Caja")>  _
Partial Public Class Caja
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID_FACTURA As Integer
	
	Private _ID_MESA As Integer
	
	Private _PRODUCTO As String
	
	Private _CANTIDAD As Integer
	
	Private _PRECIO As Decimal
	
	Private _TOTAL As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnID_FACTURAChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_FACTURAChanged()
    End Sub
    Partial Private Sub OnID_MESAChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_MESAChanged()
    End Sub
    Partial Private Sub OnPRODUCTOChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCTOChanged()
    End Sub
    Partial Private Sub OnCANTIDADChanging(value As Integer)
    End Sub
    Partial Private Sub OnCANTIDADChanged()
    End Sub
    Partial Private Sub OnPRECIOChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPRECIOChanged()
    End Sub
    Partial Private Sub OnTOTALChanging(value As Decimal)
    End Sub
    Partial Private Sub OnTOTALChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_FACTURA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID_FACTURA() As Integer
		Get
			Return Me._ID_FACTURA
		End Get
		Set
			If ((Me._ID_FACTURA = value)  _
						= false) Then
				Me.OnID_FACTURAChanging(value)
				Me.SendPropertyChanging
				Me._ID_FACTURA = value
				Me.SendPropertyChanged("ID_FACTURA")
				Me.OnID_FACTURAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_MESA", DbType:="Int NOT NULL")>  _
	Public Property ID_MESA() As Integer
		Get
			Return Me._ID_MESA
		End Get
		Set
			If ((Me._ID_MESA = value)  _
						= false) Then
				Me.OnID_MESAChanging(value)
				Me.SendPropertyChanging
				Me._ID_MESA = value
				Me.SendPropertyChanged("ID_MESA")
				Me.OnID_MESAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCTO", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property PRODUCTO() As String
		Get
			Return Me._PRODUCTO
		End Get
		Set
			If (String.Equals(Me._PRODUCTO, value) = false) Then
				Me.OnPRODUCTOChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCTO = value
				Me.SendPropertyChanged("PRODUCTO")
				Me.OnPRODUCTOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANTIDAD", DbType:="Int NOT NULL")>  _
	Public Property CANTIDAD() As Integer
		Get
			Return Me._CANTIDAD
		End Get
		Set
			If ((Me._CANTIDAD = value)  _
						= false) Then
				Me.OnCANTIDADChanging(value)
				Me.SendPropertyChanging
				Me._CANTIDAD = value
				Me.SendPropertyChanged("CANTIDAD")
				Me.OnCANTIDADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRECIO", DbType:="Money NOT NULL")>  _
	Public Property PRECIO() As Decimal
		Get
			Return Me._PRECIO
		End Get
		Set
			If ((Me._PRECIO = value)  _
						= false) Then
				Me.OnPRECIOChanging(value)
				Me.SendPropertyChanging
				Me._PRECIO = value
				Me.SendPropertyChanged("PRECIO")
				Me.OnPRECIOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TOTAL", DbType:="Money NOT NULL")>  _
	Public Property TOTAL() As Decimal
		Get
			Return Me._TOTAL
		End Get
		Set
			If ((Me._TOTAL = value)  _
						= false) Then
				Me.OnTOTALChanging(value)
				Me.SendPropertyChanging
				Me._TOTAL = value
				Me.SendPropertyChanged("TOTAL")
				Me.OnTOTALChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Empleados")>  _
Partial Public Class Empleado
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID_CTR As Integer
	
	Private _ID_EMPLEADO As String
	
	Private _ID_DPTO As String
	
	Private _NOMBRE As String
	
	Private _APELLIDO As String
	
	Private _TELEFONO As String
	
	Private _EDAD As String
	
	Private _CORREO As String
	
	Private _DIRECCION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnID_CTRChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_CTRChanged()
    End Sub
    Partial Private Sub OnID_EMPLEADOChanging(value As String)
    End Sub
    Partial Private Sub OnID_EMPLEADOChanged()
    End Sub
    Partial Private Sub OnID_DPTOChanging(value As String)
    End Sub
    Partial Private Sub OnID_DPTOChanged()
    End Sub
    Partial Private Sub OnNOMBREChanging(value As String)
    End Sub
    Partial Private Sub OnNOMBREChanged()
    End Sub
    Partial Private Sub OnAPELLIDOChanging(value As String)
    End Sub
    Partial Private Sub OnAPELLIDOChanged()
    End Sub
    Partial Private Sub OnTELEFONOChanging(value As String)
    End Sub
    Partial Private Sub OnTELEFONOChanged()
    End Sub
    Partial Private Sub OnEDADChanging(value As String)
    End Sub
    Partial Private Sub OnEDADChanged()
    End Sub
    Partial Private Sub OnCORREOChanging(value As String)
    End Sub
    Partial Private Sub OnCORREOChanged()
    End Sub
    Partial Private Sub OnDIRECCIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIRECCIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_CTR", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID_CTR() As Integer
		Get
			Return Me._ID_CTR
		End Get
		Set
			If ((Me._ID_CTR = value)  _
						= false) Then
				Me.OnID_CTRChanging(value)
				Me.SendPropertyChanging
				Me._ID_CTR = value
				Me.SendPropertyChanged("ID_CTR")
				Me.OnID_CTRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_EMPLEADO", DbType:="VarChar(9) NOT NULL", CanBeNull:=false)>  _
	Public Property ID_EMPLEADO() As String
		Get
			Return Me._ID_EMPLEADO
		End Get
		Set
			If (String.Equals(Me._ID_EMPLEADO, value) = false) Then
				Me.OnID_EMPLEADOChanging(value)
				Me.SendPropertyChanging
				Me._ID_EMPLEADO = value
				Me.SendPropertyChanged("ID_EMPLEADO")
				Me.OnID_EMPLEADOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_DPTO", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property ID_DPTO() As String
		Get
			Return Me._ID_DPTO
		End Get
		Set
			If (String.Equals(Me._ID_DPTO, value) = false) Then
				Me.OnID_DPTOChanging(value)
				Me.SendPropertyChanging
				Me._ID_DPTO = value
				Me.SendPropertyChanged("ID_DPTO")
				Me.OnID_DPTOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOMBRE", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property NOMBRE() As String
		Get
			Return Me._NOMBRE
		End Get
		Set
			If (String.Equals(Me._NOMBRE, value) = false) Then
				Me.OnNOMBREChanging(value)
				Me.SendPropertyChanging
				Me._NOMBRE = value
				Me.SendPropertyChanged("NOMBRE")
				Me.OnNOMBREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APELLIDO", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property APELLIDO() As String
		Get
			Return Me._APELLIDO
		End Get
		Set
			If (String.Equals(Me._APELLIDO, value) = false) Then
				Me.OnAPELLIDOChanging(value)
				Me.SendPropertyChanging
				Me._APELLIDO = value
				Me.SendPropertyChanged("APELLIDO")
				Me.OnAPELLIDOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TELEFONO", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property TELEFONO() As String
		Get
			Return Me._TELEFONO
		End Get
		Set
			If (String.Equals(Me._TELEFONO, value) = false) Then
				Me.OnTELEFONOChanging(value)
				Me.SendPropertyChanging
				Me._TELEFONO = value
				Me.SendPropertyChanged("TELEFONO")
				Me.OnTELEFONOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDAD", DbType:="VarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property EDAD() As String
		Get
			Return Me._EDAD
		End Get
		Set
			If (String.Equals(Me._EDAD, value) = false) Then
				Me.OnEDADChanging(value)
				Me.SendPropertyChanging
				Me._EDAD = value
				Me.SendPropertyChanged("EDAD")
				Me.OnEDADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CORREO", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property CORREO() As String
		Get
			Return Me._CORREO
		End Get
		Set
			If (String.Equals(Me._CORREO, value) = false) Then
				Me.OnCORREOChanging(value)
				Me.SendPropertyChanging
				Me._CORREO = value
				Me.SendPropertyChanged("CORREO")
				Me.OnCORREOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIRECCION", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property DIRECCION() As String
		Get
			Return Me._DIRECCION
		End Get
		Set
			If (String.Equals(Me._DIRECCION, value) = false) Then
				Me.OnDIRECCIONChanging(value)
				Me.SendPropertyChanging
				Me._DIRECCION = value
				Me.SendPropertyChanged("DIRECCION")
				Me.OnDIRECCIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Deposito")>  _
Partial Public Class Deposito
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID_CTR As Integer
	
	Private _ID_PRODUCTO As String
	
	Private _DESCRIPCION As String
	
	Private _CANTIDAD As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnID_CTRChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_CTRChanged()
    End Sub
    Partial Private Sub OnID_PRODUCTOChanging(value As String)
    End Sub
    Partial Private Sub OnID_PRODUCTOChanged()
    End Sub
    Partial Private Sub OnDESCRIPCIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPCIONChanged()
    End Sub
    Partial Private Sub OnCANTIDADChanging(value As Integer)
    End Sub
    Partial Private Sub OnCANTIDADChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_CTR", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID_CTR() As Integer
		Get
			Return Me._ID_CTR
		End Get
		Set
			If ((Me._ID_CTR = value)  _
						= false) Then
				Me.OnID_CTRChanging(value)
				Me.SendPropertyChanging
				Me._ID_CTR = value
				Me.SendPropertyChanged("ID_CTR")
				Me.OnID_CTRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_PRODUCTO", DbType:="VarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property ID_PRODUCTO() As String
		Get
			Return Me._ID_PRODUCTO
		End Get
		Set
			If (String.Equals(Me._ID_PRODUCTO, value) = false) Then
				Me.OnID_PRODUCTOChanging(value)
				Me.SendPropertyChanging
				Me._ID_PRODUCTO = value
				Me.SendPropertyChanged("ID_PRODUCTO")
				Me.OnID_PRODUCTOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPCION", DbType:="VarChar(35) NOT NULL", CanBeNull:=false)>  _
	Public Property DESCRIPCION() As String
		Get
			Return Me._DESCRIPCION
		End Get
		Set
			If (String.Equals(Me._DESCRIPCION, value) = false) Then
				Me.OnDESCRIPCIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPCION = value
				Me.SendPropertyChanged("DESCRIPCION")
				Me.OnDESCRIPCIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANTIDAD", DbType:="Int NOT NULL")>  _
	Public Property CANTIDAD() As Integer
		Get
			Return Me._CANTIDAD
		End Get
		Set
			If ((Me._CANTIDAD = value)  _
						= false) Then
				Me.OnCANTIDADChanging(value)
				Me.SendPropertyChanging
				Me._CANTIDAD = value
				Me.SendPropertyChanged("CANTIDAD")
				Me.OnCANTIDADChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Login")>  _
Partial Public Class Login
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID_USER As String
	
	Private _USERNAME As String
	
	Private _PASS As String
	
	Private _TIPO_USER As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnID_USERChanging(value As String)
    End Sub
    Partial Private Sub OnID_USERChanged()
    End Sub
    Partial Private Sub OnUSERNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnUSERNAMEChanged()
    End Sub
    Partial Private Sub OnPASSChanging(value As String)
    End Sub
    Partial Private Sub OnPASSChanged()
    End Sub
    Partial Private Sub OnTIPO_USERChanging(value As Integer)
    End Sub
    Partial Private Sub OnTIPO_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_USER", DbType:="VarChar(9) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ID_USER() As String
		Get
			Return Me._ID_USER
		End Get
		Set
			If (String.Equals(Me._ID_USER, value) = false) Then
				Me.OnID_USERChanging(value)
				Me.SendPropertyChanging
				Me._ID_USER = value
				Me.SendPropertyChanged("ID_USER")
				Me.OnID_USERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USERNAME", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property USERNAME() As String
		Get
			Return Me._USERNAME
		End Get
		Set
			If (String.Equals(Me._USERNAME, value) = false) Then
				Me.OnUSERNAMEChanging(value)
				Me.SendPropertyChanging
				Me._USERNAME = value
				Me.SendPropertyChanged("USERNAME")
				Me.OnUSERNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PASS", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property PASS() As String
		Get
			Return Me._PASS
		End Get
		Set
			If (String.Equals(Me._PASS, value) = false) Then
				Me.OnPASSChanging(value)
				Me.SendPropertyChanging
				Me._PASS = value
				Me.SendPropertyChanged("PASS")
				Me.OnPASSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIPO_USER", DbType:="Int NOT NULL")>  _
	Public Property TIPO_USER() As Integer
		Get
			Return Me._TIPO_USER
		End Get
		Set
			If ((Me._TIPO_USER = value)  _
						= false) Then
				Me.OnTIPO_USERChanging(value)
				Me.SendPropertyChanging
				Me._TIPO_USER = value
				Me.SendPropertyChanged("TIPO_USER")
				Me.OnTIPO_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
